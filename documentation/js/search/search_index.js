var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.776,1,3.046,2,1.447,3,0.524,4,0.451,5,0.451,6,3.296,7,0.643,8,0.039,9,0.96,10,2.619,11,3.296,12,0.524,13,0.025,14,4.004,15,1.774,16,0.032,17,0.032]],["title/modules/AppModule.html",[18,0.98,19,1.858]],["body/modules/AppModule.html",[1,2.698,2,1.359,3,0.349,4,0.3,5,0.3,7,0.709,8,0.039,9,0.64,10,2.546,11,2.197,12,0.349,13,0.017,16,0.024,17,0.024,18,1.422,19,3.587,20,1.183,21,1.183,22,1.469,23,1.469,24,1.183,25,2.396,26,1.469,27,2.197,28,2.197,29,2.197,30,2.546,31,2.845,32,2.29,33,1.689,34,2.069,35,1.469,36,1.315,37,2.668,38,2.396,39,2.33,40,2.668,41,2.668,42,2.668,43,2.668,44,2.668,45,2.668]],["title/injectables/AppService.html",[10,1.477,46,1.083]],["body/injectables/AppService.html",[3,0.496,4,0.427,5,0.427,7,0.496,8,0.038,9,0.91,10,2.342,12,0.496,13,0.024,16,0.031,17,0.031,46,1.718,47,2.089,48,3.124,49,0.816,50,2.342,51,5.44,52,1.121,53,3.795,54,1.87,55,1.718,56,1.87,57,3.795,58,3.795,59,3.795,60,3.795]],["title/controllers/AuthController.html",[0,1.083,61,1.858]],["body/controllers/AuthController.html",[0,1.393,2,1.393,3,0.504,4,0.434,5,0.434,7,0.628,8,0.039,9,0.925,12,0.504,13,0.024,15,1.709,16,0.031,17,0.031,61,2.976,62,3.174,63,2.725,64,3.952,65,2.09,66,3.174,67,3.855,68,1.899,69,2.122,70,2.122,71,1.899]],["title/modules/AuthModule.html",[18,0.98,30,1.477]],["body/modules/AuthModule.html",[2,1.477,3,0.394,4,0.339,5,0.339,7,0.68,8,0.039,9,0.722,12,0.394,13,0.019,16,0.026,17,0.026,18,1.335,20,1.334,21,1.334,22,1.657,23,1.657,24,1.334,25,2.554,26,2.249,30,2.788,32,1.811,33,1.753,34,2.249,35,1.657,36,1.483,39,1.866,61,2.876,65,2.309,66,2.478,72,2.478,73,2.478,74,2.478,75,3.01,76,3.01,77,3.01,78,2.128,79,2.478,80,1.866,81,3.01]],["title/injectables/AuthService.html",[46,1.083,65,1.199]],["body/injectables/AuthService.html",[3,0.348,4,0.299,5,0.299,7,0.49,8,0.039,9,0.638,12,0.348,13,0.017,15,1.178,16,0.024,17,0.024,18,1.225,33,1.77,46,1.355,47,1.463,49,0.572,50,1.847,52,1.283,54,1.847,55,1.917,56,2.14,65,1.499,68,1.847,69,1.463,71,2.543,78,1.879,80,1.648,82,2.189,83,3.884,84,4.344,85,2.189,86,2.659,87,2.064,88,2.064,89,1.107,90,1.499,91,2.659,92,2.659,93,2.659,94,3.087,95,2.324,96,2.659,97,1.879,98,2.189,99,2.659,100,1.463,101,2.659,102,2.659,103,2.659,104,1.879,105,2.693,106,2.659,107,2.659,108,2.189,109,2.659,110,1.879,111,2.659,112,2.659,113,2.659,114,2.189]],["title/classes/CreatePostDto.html",[13,0.019,115,1.65]],["body/classes/CreatePostDto.html",[3,0.177,4,0.153,5,0.153,7,0.515,8,0.038,12,0.177,13,0.023,16,0.014,17,0.014,49,0.292,52,1.372,55,1.819,89,1.526,90,1.945,104,2.338,114,2.723,115,1.821,116,0.601,117,3.366,118,0.959,119,1.264,120,2.348,121,2.852,122,2.852,123,3.583,124,2.852,125,2.852,126,3.659,127,2.016,128,2.852,129,3.583,130,2.059,131,1.356,132,2.396,133,2.235,134,1.356,135,1.356,136,2.235,137,2.235,138,2.235,139,1.356,140,2.051,141,1.356,142,1.356,143,3.938,144,1.84,145,2.348,146,2.235,147,1.356,148,1.356,149,1.356,150,3.308,151,3.308,152,3.938,153,1.356,154,2.235,155,2.852,156,1.356,157,1.356,158,1.356,159,1.356,160,3.308,161,3.308,162,1.116,163,2.235,164,2.235,165,2.235,166,2.235,167,2.235,168,2.338,169,2.235,170,1.356,171,3.012,172,1.356,173,1.356,174,1.356,175,1.356,176,3.308,177,1.356,178,1.356,179,2.235,180,1.264,181,1.356,182,1.356,183,1.356,184,2.852,185,1.356,186,2.235,187,2.268,188,2.783,189,2.586,190,2.235,191,1.116,192,1.116,193,2.235,194,0.601,195,0.959,196,0.959,197,2.016,198,1.356,199,2.723,200,2.723,201,0.668,202,1.356,203,1.356,204,1.356,205,1.356,206,1.356,207,1.116,208,1.356,209,2.348,210,1.116,211,2.235,212,1.356,213,1.58,214,1.356,215,1.116,216,1.356]],["title/classes/CreatePostMetaOptionsDto.html",[13,0.019,140,1.858]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.456,4,0.392,5,0.392,7,0.456,8,0.038,12,0.456,13,0.028,16,0.029,17,0.029,49,0.75,52,1.33,55,1.627,89,1.33,116,1.545,117,3.526,119,1.996,130,1.996,140,2.792,180,2.211,187,3.268,189,3.183,194,1.545,197,3.526,209,4.107,213,3.526,217,2.87,218,3.486,219,3.486,220,3.486]],["title/classes/CreateUserDto.html",[13,0.019,221,1.65]],["body/classes/CreateUserDto.html",[3,0.335,4,0.289,5,0.289,7,0.335,8,0.037,12,0.335,13,0.023,16,0.024,17,0.024,49,0.552,52,1.371,55,1.939,89,1.371,90,1.462,94,3.506,97,3.01,116,1.137,119,1.62,130,2.057,162,3.009,187,2.266,188,2.584,189,3.281,191,2.112,192,2.112,194,1.137,207,3.009,221,2.012,222,4.04,223,1.813,224,3.506,225,4.259,226,4.259,227,2.565,228,2.565,229,2.565,230,2.565,231,2.565,232,2.565,233,2.565,234,3.655,235,3.655,236,3.655,237,3.655,238,2.565,239,3.655,240,3.655,241,5.101,242,3.655,243,4.642,244,3.655,245,2.012,246,2.565,247,2.565,248,2.565,249,2.565,250,3.655,251,2.565,252,2.565,253,2.565]],["title/classes/GetUsersParamDto.html",[13,0.019,254,1.65]],["body/classes/GetUsersParamDto.html",[3,0.439,4,0.378,5,0.378,7,0.641,8,0.038,12,0.439,13,0.031,16,0.028,17,0.028,49,0.722,52,0.991,89,1.447,90,1.757,95,3.222,105,2.724,116,1.488,119,1.948,130,1.488,132,1.654,188,3.106,194,1.488,195,2.373,200,3.618,201,1.654,245,2.697,254,2.419,255,3.618,256,2.419,257,2.764,258,3.357,259,4.395,260,3.357,261,3.357,262,3.618]],["title/classes/PatchPostDto.html",[13,0.019,263,1.858]],["body/classes/PatchPostDto.html",[3,0.437,4,0.376,5,0.376,7,0.639,8,0.038,12,0.437,13,0.027,16,0.028,17,0.028,49,0.719,52,0.987,89,0.987,95,3.216,115,1.84,116,1.481,118,2.362,119,1.942,130,1.481,180,1.942,187,2.716,194,1.481,196,2.362,199,3.607,201,1.647,245,2.412,262,3.607,263,2.716,264,3.607,265,3.607,266,4.381,267,3.342,268,4.381,269,3.342,270,3.342,271,2.751,272,2.751,273,3.342,274,3.342]],["title/classes/PatchUserDto.html",[13,0.019,275,1.858]],["body/classes/PatchUserDto.html",[3,0.521,4,0.448,5,0.448,7,0.641,8,0.037,12,0.521,13,0.025,16,0.032,17,0.032,116,1.765,196,2.815,221,2.919,223,2.815,265,4.032,271,4.366,275,3.036,276,3.278,277,3.278,278,3.278,279,3.278]],["title/controllers/PostsController.html",[0,1.083,280,1.858]],["body/controllers/PostsController.html",[0,0.79,2,0.79,3,0.286,4,0.246,5,0.246,7,0.602,8,0.039,9,0.525,12,0.286,13,0.014,15,0.969,16,0.021,17,0.021,49,0.47,50,1.604,52,1.148,54,1.915,55,1.405,56,1.604,63,1.546,68,1.078,69,1.204,70,1.204,71,2.585,87,2.14,88,2.14,89,1.148,90,1.554,100,1.204,115,2.37,127,1.546,130,1.723,132,1.604,180,2.138,201,1.078,263,2.991,272,2.68,280,2.018,281,1.801,282,3.2,283,3.255,284,3.255,285,3.255,286,2.187,287,2.187,288,3.255,289,2.301,290,2.187,291,4.306,292,3.255,293,3.255,294,2.187,295,2.187,296,2.187,297,3.255,298,2.187,299,1.801,300,2.187,301,3.2,302,2.187,303,1.801,304,1.801,305,1.801,306,1.915,307,1.801,308,2.68,309,2.68,310,1.801,311,1.801,312,1.801,313,2.187,314,2.187,315,2.187,316,2.187,317,2.187,318,2.187,319,1.801,320,1.801,321,2.187,322,2.187,323,2.187,324,1.801,325,1.801,326,1.801,327,2.187,328,2.187]],["title/modules/PostsModule.html",[18,0.98,31,1.65]],["body/modules/PostsModule.html",[2,1.542,3,0.42,4,0.361,5,0.361,7,0.668,8,0.038,9,0.77,12,0.42,13,0.02,16,0.028,17,0.028,18,1.566,20,1.422,21,1.422,22,1.767,23,1.767,24,1.422,25,2.638,26,1.767,31,3.118,32,2.422,34,2.348,35,1.767,36,1.581,39,2.644,79,2.642,280,2.97,306,2.693,307,2.642,329,2.642,330,2.642,331,3.209,332,3.209,333,3.209]],["title/injectables/PostsService.html",[46,1.083,306,1.477]],["body/injectables/PostsService.html",[3,0.369,4,0.318,5,0.318,7,0.512,8,0.039,9,0.677,12,0.369,13,0.018,15,1.251,16,0.025,17,0.025,33,1.719,46,1.413,47,1.554,49,0.607,50,1.927,52,1.155,54,1.391,55,1.621,56,1.391,68,1.927,69,1.554,70,2.153,71,2.21,78,1.996,85,2.325,87,2.153,88,2.153,89,1.155,90,1.564,100,1.554,105,3.261,110,1.996,120,3.987,129,3.219,256,2.153,282,2.325,299,2.325,306,1.927,334,2.325,335,3.219,336,2.824,337,3.911,338,2.824,339,3.219,340,2.824,341,2.325,342,3.911,343,2.824,344,2.824]],["title/controllers/UsersController.html",[0,1.083,38,1.65]],["body/controllers/UsersController.html",[0,0.581,2,0.581,3,0.336,4,0.181,5,0.181,7,0.607,8,0.038,9,0.386,12,0.21,13,0.016,15,0.712,16,0.024,17,0.017,33,1.047,38,1.413,49,0.346,50,1.264,52,0.946,54,1.578,55,0.927,56,1.264,63,1.136,68,0.792,69,0.885,70,0.885,71,2.358,87,1.763,88,2.2,89,1.32,90,1.281,100,0.885,127,1.136,130,1.42,132,2.099,144,3.011,145,3.011,168,2.585,180,1.621,194,0.712,201,0.792,215,2.113,221,2.461,245,2.89,254,2.345,256,2.461,275,2.267,279,2.113,289,1.814,301,2.637,303,1.324,304,2.637,305,2.113,308,2.637,309,2.113,310,1.324,311,1.324,312,1.324,319,1.324,320,2.113,324,2.113,325,2.113,326,2.637,341,2.113,345,1.324,346,3.203,347,3.203,348,3.203,349,1.608,350,1.608,351,1.608,352,3.29,353,3.16,354,2.566,355,1.608,356,2.566,357,2.566,358,2.566,359,1.608,360,2.566,361,2.566,362,1.608,363,2.566,364,3.657,365,2.566,366,3.657,367,1.608,368,2.566,369,1.608,370,1.608,371,1.608,372,2.566,373,3.203,374,1.608,375,1.608,376,1.608,377,1.608,378,1.324,379,1.324,380,1.324,381,3.203,382,1.608,383,1.608,384,1.608,385,1.608,386,1.608,387,1.608,388,1.608,389,1.608,390,1.608,391,1.608,392,1.608,393,1.608,394,1.608,395,1.608,396,1.608]],["title/modules/UsersModule.html",[18,0.98,32,1.329]],["body/modules/UsersModule.html",[2,1.506,3,0.405,4,0.349,5,0.349,7,0.687,8,0.038,9,0.743,12,0.405,13,0.019,16,0.027,17,0.027,18,1.539,20,1.374,21,1.374,22,1.707,23,1.707,24,1.374,25,2.592,26,2.592,30,2.054,32,2.45,33,1.91,34,2.294,35,1.707,36,1.527,38,2.592,39,1.922,65,1.24,80,2.584,380,2.552,397,2.552,398,2.552,399,3.1,400,3.1,401,3.1,402,2.552,403,3.1]],["title/injectables/UsersService.html",[33,0.98,46,1.083]],["body/injectables/UsersService.html",[3,0.302,4,0.26,5,0.26,7,0.525,8,0.039,9,0.555,12,0.302,13,0.014,15,1.025,16,0.022,17,0.022,33,1.108,46,1.226,47,1.273,49,0.497,50,1.671,52,1.186,54,1.671,55,1.702,56,1.671,64,1.904,65,2.034,68,1.671,70,1.273,71,2.425,80,2.102,83,1.904,87,2.211,88,2.211,89,1.186,90,1.606,95,2.742,97,3.127,98,3.306,100,1.273,105,1.433,110,1.634,224,3.642,245,2.8,254,2.71,256,1.273,335,3.306,339,1.904,352,3.306,353,2.839,378,1.904,379,1.904,402,1.904,404,1.904,405,3.391,406,2.312,407,2.312,408,2.312,409,2.312,410,3.391,411,2.312,412,2.312,413,2.312,414,2.312,415,2.312,416,3.391,417,3.391,418,2.312]],["title/coverage.html",[419,2.88]],["body/coverage.html",[0,1.736,1,1.717,5,0.312,6,2.28,8,0.038,10,1.365,13,0.033,16,0.025,17,0.025,24,1.228,33,0.905,38,1.525,46,1.736,48,2.28,61,1.717,62,2.28,65,1.108,82,2.28,89,0.818,115,1.525,117,2.728,118,2.728,140,1.717,180,1.228,197,1.958,210,2.28,217,2.28,221,1.525,222,2.28,223,2.728,254,1.525,255,2.28,256,1.525,257,2.28,263,1.717,264,2.28,275,1.717,276,2.28,280,1.717,281,2.28,289,1.958,306,1.365,334,2.28,345,2.28,404,2.28,419,1.958,420,2.28,421,2.77,422,5.853,423,4.803,424,4.441,425,4.803,426,2.28,427,2.77,428,3.859,429,2.77,430,2.77,431,2.77,432,2.77]],["title/dependencies.html",[21,1.596,433,2.068]],["body/dependencies.html",[8,0.039,9,0.915,13,0.03,16,0.031,17,0.031,21,1.691,194,1.691,195,2.697,201,1.88,277,3.141,278,3.141,434,3.815,435,3.815,436,5.202,437,3.815,438,3.815,439,3.815,440,3.815,441,3.815,442,3.815,443,3.815,444,3.815,445,3.815,446,3.815,447,3.815,448,3.815]],["title/miscellaneous/enumerations.html",[449,1.557,450,2.965]],["body/miscellaneous/enumerations.html",[8,0.038,16,0.03,17,0.03,49,0.792,123,3.838,171,3.838,180,2.066,213,4.12,353,3.295,449,2.281,450,3.03,451,3.68,452,3.68,453,3.68,454,4.662,455,4.662,456,4.662,457,4.662,458,3.68,459,4.662,460,4.662]],["title/miscellaneous/functions.html",[449,1.557,461,2.965]],["body/miscellaneous/functions.html",[8,0.034,16,0.034,17,0.034,24,2.47,49,0.962,426,3.681,449,2.772,461,3.681,462,4.471]],["title/index.html",[49,0.54,463,2.512,464,2.512]],["body/index.html",[4,0.255,8,0.037,13,0.021,16,0.022,17,0.022,36,2.156,104,3.094,108,1.862,132,1.114,168,2.803,419,1.599,420,1.862,465,3.965,466,3.337,467,2.262,468,2.262,469,2.262,470,2.262,471,2.262,472,5.384,473,2.262,474,2.262,475,2.262,476,2.262,477,2.262,478,5.052,479,3.965,480,2.262,481,2.262,482,2.262,483,3.337,484,2.262,485,2.262,486,2.262,487,3.965,488,2.262,489,3.337,490,2.262,491,2.262,492,2.262,493,2.262,494,2.262,495,2.262,496,2.262,497,2.262,498,4.377,499,3.337,500,2.262,501,3.965,502,2.262,503,3.603,504,3.337,505,2.262,506,2.262,507,2.262,508,2.262,509,2.262,510,2.262,511,3.965,512,2.262,513,2.262,514,2.262,515,3.337,516,2.262,517,2.262,518,2.262,519,3.965,520,2.262,521,2.262,522,2.262,523,2.262,524,2.262,525,2.262,526,2.262,527,3.337,528,2.262,529,2.262,530,2.262,531,2.262,532,2.262,533,2.262,534,3.337,535,2.262,536,2.262,537,2.262,538,3.337,539,3.337,540,2.262,541,2.262,542,2.262,543,2.262,544,2.262,545,2.262,546,2.262,547,2.262,548,2.262,549,2.262,550,1.862,551,2.262,552,2.262,553,2.262,554,2.262,555,2.262,556,2.262,557,1.862]],["title/modules.html",[20,1.806]],["body/modules.html",[8,0.032,16,0.032,17,0.032,19,2.567,20,1.835,30,2.04,31,2.279,32,1.835,503,4.617,558,5.608,559,5.608,560,5.608]],["title/overview.html",[561,3.355]],["body/overview.html",[2,1.041,8,0.038,10,2.233,16,0.026,17,0.026,18,0.941,19,3.581,20,1.276,21,1.276,22,1.585,23,1.585,24,1.276,25,1.585,26,1.585,27,2.37,28,2.37,29,2.37,30,2.722,31,2.985,32,2.403,33,1.832,34,2.182,35,1.585,36,1.419,47,1.585,65,2.168,72,2.37,73,2.37,74,2.37,116,1.276,306,2.233,329,2.37,330,2.37,397,2.37,398,2.37,561,2.37,562,4.533,563,2.879]],["title/properties.html",[119,1.596,433,2.068]],["body/properties.html",[8,0.038,16,0.034,17,0.034,119,1.946,132,2.163,550,3.614,557,3.614,564,4.39,565,4.39,566,4.39]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":565,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":341,"title":{},"body":{"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["1.1.23",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["10})@apiquery({name",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["1234",{"_index":418,"title":{},"body":{"injectables/UsersService.html":{}}}],["2",{"_index":343,"title":{},"body":{"injectables/PostsService.html":{}}}],["2.0.5",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["201",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{}}}],["4",{"_index":562,"title":{},"body":{"overview.html":{}}}],["6",{"_index":563,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["alice",{"_index":416,"title":{},"body":{"injectables/UsersService.html":{}}}],["alice@doe.com",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{}}}],["alive",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["amazing",{"_index":544,"title":{},"body":{"index.html":{}}}],["anything",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apioperation",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({description",{"_index":267,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["apipropertyoptional",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":258,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["apiquery",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.'})@apiresponse({status",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":515,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":61,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":550,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":65,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["b",{"_index":344,"title":{},"body":{"injectables/PostsService.html":{}}}],["backers",{"_index":545,"title":{},"body":{"index.html":{}}}],["blog",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["board",{"_index":537,"title":{},"body":{"index.html":{}}}],["body",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":560,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":558,"title":{},"body":{"modules.html":{}}}],["channel",{"_index":506,"title":{},"body":{"index.html":{}}}],["characters",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":329,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":331,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":330,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":397,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":398,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":399,"title":{},"body":{"modules/UsersModule.html":{}}}],["come",{"_index":495,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["console.log(createpostdto",{"_index":323,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(createuserdto",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(getusersparamdto",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(isauth",{"_index":413,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(patchpostdto",{"_index":328,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":406,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(usersservice",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":513,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":419,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["created",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":321,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":115,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostdto:createpostdto",{"_index":322,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostmetaoptionsdto",{"_index":140,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["creates",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuserdto",{"_index":221,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createusers",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["database",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dead",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":508,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(3",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["description",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["description:'id",{"_index":273,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["development",{"_index":480,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":521,"title":{},"body":{"index.html":{}}}],["discord",{"_index":505,"title":{},"body":{"index.html":{}}}],["dive",{"_index":507,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":420,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dto",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dtos/create",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":490,"title":{},"body":{"index.html":{}}}],["each",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["eight",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["email",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["endpoint",{"_index":326,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["enterprise",{"_index":526,"title":{},"body":{"index.html":{}}}],["enum",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":450,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["env",{"_index":471,"title":{},"body":{"index.html":{}}}],["example",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["exists",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":510,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["exports:[authservice",{"_index":81,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":265,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["featuredimageurl",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["fetches",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":493,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":339,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":335,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getusersparamdto",{"_index":408,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":337,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":405,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":410,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["follow",{"_index":530,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":80,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":466,"title":{},"body":{"index.html":{}}}],["full",{"_index":525,"title":{},"body":{"index.html":{}}}],["function",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":461,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":463,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":254,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["graph",{"_index":516,"title":{},"body":{"index.html":{}}}],["grow",{"_index":541,"title":{},"body":{"index.html":{}}}],["hands",{"_index":509,"title":{},"body":{"index.html":{}}}],["handy",{"_index":496,"title":{},"body":{"index.html":{}}}],["headers",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["help",{"_index":523,"title":{},"body":{"index.html":{}}}],["here",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["http://localhost:3000/posts/userid",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{}}}],["https://nestjs.com",{"_index":554,"title":{},"body":{"index.html":{}}}],["id",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UsersService.html":{}}}],["id'})@isoptional()@isint()@type(undefined",{"_index":260,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["id:string",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":49,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":46,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["inreview",{"_index":456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inside",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["installexample",{"_index":473,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["interact",{"_index":517,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus)@isnotempty()@apiproperty({enum",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype)@isnotempty()@apiproperty({enum",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isinstance",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["isint",{"_index":262,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isnotempty()@isstring",{"_index":218,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isoptional",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isoptional()@isarray()@isstring({each",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional()@isjson",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional()@isurl()@apipropertyoptional({description",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@matches(/^[a",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring()@isnotempty()@minlength(3",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@apipropertyoptional({description",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@minlength(4)@isnotempty()@apiproperty({title",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring()@minlength(8)@matches(/^(?=.*[a",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":534,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":536,"title":{},"body":{"index.html":{}}}],["john",{"_index":414,"title":{},"body":{"injectables/UsersService.html":{}}}],["john@doe.com",{"_index":415,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":547,"title":{},"body":{"index.html":{}}}],["justice",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["kamil",{"_index":551,"title":{},"body":{"index.html":{}}}],["key",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{}}}],["lastname",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":500,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":557,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":539,"title":{},"body":{"index.html":{}}}],["limit",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":532,"title":{},"body":{"index.html":{}}}],["list",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email:string",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":533,"title":{},"body":{"index.html":{}}}],["loop",{"_index":528,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mapped",{"_index":476,"title":{},"body":{"index.html":{}}}],["matches",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maximal",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["maxlength",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["message:'a",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["message:'minimum",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message:'not",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["met",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["met'})@maxlength(96",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["meta",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minimum",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":449,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":538,"title":{},"body":{"index.html":{}}}],["mo",{"_index":342,"title":{},"body":{"injectables/PostsService.html":{}}}],["mode",{"_index":483,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["module,forwardref",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":501,"title":{},"body":{"index.html":{}}}],["myheader",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["myheader:any",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["myśliwiec",{"_index":552,"title":{},"body":{"index.html":{}}}],["name",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":522,"title":{},"body":{"index.html":{}}}],["needs",{"_index":268,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["nest",{"_index":465,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":556,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":498,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/constants",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["nestjs/core",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":277,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["npm",{"_index":472,"title":{},"body":{"index.html":{}}}],["number",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":535,"title":{},"body":{"index.html":{}}}],["official",{"_index":511,"title":{},"body":{"index.html":{}}}],["one",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["open",{"_index":540,"title":{},"body":{"index.html":{}}}],["option",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["optional",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["optional_property_deps_metadata",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["options.dto",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":217,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":220,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["options.dto.ts:7",{"_index":219,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["out",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":561,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":433,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param.dto",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto.ts",{"_index":257,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:13",{"_index":261,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":524,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":271,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":266,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["password",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["password:string",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patched",{"_index":274,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["patched.'})@isint()@isnotempty",{"_index":269,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["patchpostdto",{"_index":263,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchuser",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":275,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["patchuserdto:patchuserdto",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{}}}],["per",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["please",{"_index":504,"title":{},"body":{"index.html":{}}}],["position",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["possible",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto",{"_index":272,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:12",{"_index":270,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:19",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:27",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:34",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:41",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:48",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:52",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:59",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:62",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:68",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:89",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["posts.controller",{"_index":333,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":280,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":306,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":485,"title":{},"body":{"index.html":{}}}],["project",{"_index":479,"title":{},"body":{"index.html":{}}}],["properties",{"_index":119,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["property",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["publishedon",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["query",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["query.'})@apiquery({name",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":502,"title":{},"body":{"index.html":{}}}],["read",{"_index":548,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":518,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":469,"title":{},"body":{"index.html":{}}}],["request",{"_index":325,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["requested",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":494,"title":{},"body":{"index.html":{}}}],["response",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":478,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["scheduled",{"_index":455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schema",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sent",{"_index":324,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["series",{"_index":460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["service",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["setup",{"_index":470,"title":{},"body":{"index.html":{}}}],["sidebarenabled",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["slug",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["specific",{"_index":259,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":543,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":403,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":75,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":402,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:13",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:22",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/enums/poststatus.enum.ts",{"_index":453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/dtos/enums/posttype.enum.ts",{"_index":458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/dtos/patch",{"_index":264,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts",{"_index":281,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:18",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:30",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:36",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":332,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":334,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:11",{"_index":338,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":336,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":255,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":276,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":404,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:14",{"_index":409,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:35",{"_index":411,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:6",{"_index":407,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:50",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":79,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":400,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":481,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":484,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":486,"title":{},"body":{"index.html":{}}}],["started",{"_index":464,"title":{"index.html":{}},"body":{}}],["starter",{"_index":468,"title":{},"body":{"index.html":{}}}],["statements",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":527,"title":{},"body":{"index.html":{}}}],["story",{"_index":459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":320,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@post",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":503,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":559,"title":{},"body":{"modules.html":{}}}],["table",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["test",{"_index":489,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":492,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":491,"title":{},"body":{"index.html":{}}}],["tests",{"_index":487,"title":{},"body":{"index.html":{}}}],["text",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["thanks",{"_index":542,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":412,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservice.findall(userid",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findonebyid('1212",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":340,"title":{},"body":{"injectables/PostsService.html":{}}}],["time",{"_index":519,"title":{},"body":{"index.html":{}}}],["title",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["token",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":549,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["transformer@0.5.1",{"_index":475,"title":{},"body":{"index.html":{}}}],["true",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined)@apipropertyoptional({type",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":555,"title":{},"body":{"index.html":{}}}],["type",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":278,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["types@2.0.5compile",{"_index":477,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":467,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":488,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":566,"title":{},"body":{"properties.html":{}}}],["updatepost",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":327,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostdto",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":529,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["url",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["userid:string",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{}}}],["users",{"_index":256,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":401,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.dto",{"_index":279,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["users.dto.ts",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["users.dto.ts:14",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:17",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:22",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:8",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users/providers/users.service",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.controller",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":38,"title":{"controllers/UsersController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":33,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":520,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validator",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["validator@0.14.1",{"_index":474,"title":{},"body":{"index.html":{}}}],["value",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":564,"title":{},"body":{"properties.html":{}}}],["video",{"_index":512,"title":{},"body":{"index.html":{}}}],["visit",{"_index":499,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":514,"title":{},"body":{"index.html":{}}}],["void",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["want",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":482,"title":{},"body":{"index.html":{}}}],["website",{"_index":553,"title":{},"body":{"index.html":{}}}],["without",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["working",{"_index":497,"title":{},"body":{"index.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":531,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":546,"title":{},"body":{"index.html":{}}}],["z0",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d]{8",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)[a",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { UsersController } from './users/users.controller';\nimport { UsersService } from './users/providers/users.service';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController, UsersController],\n  providers: [AppService, UsersService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Dead to the World, alive for justice!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        // injecting auth Service \n        public readonly authService: AuthService,\n    ){}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module,forwardRef } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, UsersService],\n  imports: [forwardRef(()=> UsersModule)],\n  exports:[AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n\n    constructor(\n        // injecting UsersService\n        @Inject(forwardRef(() => UsersService))\n        private readonly usersService: UsersService,\n    ){}\n\n    public login(email:string, password:string, id:string){\n    // check if user exists in database (here is where this module depends on user module)\n    const user = this.usersService.findOneById('1212')\n   // login\n     \n    // return token\n    return 'SAMPLE_TOKEN'\n    }\n\n    public isAuth() {\n        return true\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    Optional\n                                publishedOn\n                            \n                            \n                                    \n                                    \n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'some description of an optional property'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUrl()@ApiPropertyOptional({description: 'some text inside the dto class CreatePostDto'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)@ApiPropertyOptional({type: 'array', required: false, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(postType)@IsNotEmpty()@ApiProperty({enum: postType, description: 'Possible values, check Enum array.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        publishedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsISO8601()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should all be small letters and uses only \"-\" without spaces. Example \"my-url\"'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(postStatus)@IsNotEmpty()@ApiProperty({enum: postStatus, description: 'For possible values, check Enum array.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@IsNotEmpty()@ApiProperty({title: 'This is a title', description: 'This is the title of the blog post'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { postType } from \"./enums/postType.enum\"\nimport { postStatus } from \"./enums/postStatus.enum\"\nimport { IsArray, IsEnum, IsISO8601, IsJSON, IsNotEmpty, IsOptional, IsString, IsUrl, Matches, MinLength, ValidateNested } from \"class-validator\"\nimport { Type } from \"class-transformer\";\nimport { CreatePostMetaOptionsDto } from \"./create-post-meta-options.dto\";\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\n\n\nexport class CreatePostDto{\n\n    @IsString()\n    @MinLength(4)\n    @IsNotEmpty()\n    @ApiProperty({\n        title: \"This is a title\",\n        description: \"This is the title of the blog post\"\n    })\n    title: string;\n\n    @IsEnum(postType)\n    @IsNotEmpty()\n    @ApiProperty({\n        enum: postType,\n        description: \"Possible values, check Enum array.\"\n    })\n    postType: postType;\n\n    @IsString()\n    @IsNotEmpty()\n    @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/,{\n        message:'A slug should all be small letters and uses only \"-\" without spaces. Example \"my-url\"'\n    })\n    slug: string;\n    @IsEnum(postStatus)\n    @IsNotEmpty()\n    @ApiProperty({\n        enum: postStatus,\n        description: \"For possible values, check Enum array.\"\n    })\n    status: postStatus;\n\n    @IsString()\n    @IsOptional()\n    @ApiPropertyOptional({\n        description: \"some description of an optional property\"\n    })\n    content?: string;\n\n    @IsOptional()\n    @IsJSON()\n    schema: string;\n\n    @IsOptional()\n    @IsUrl()\n    @ApiPropertyOptional({\n        description: \"some text inside the dto class CreatePostDto\"\n    })\n    featuredImageUrl?: string;\n\n    @IsISO8601()\n    publishedOn?: Date;\n\n    @IsOptional()\n    @IsArray()\n    @IsString( {each: true})\n    @MinLength(3, {each: true})\n    tags?: string[];\n\n    @IsOptional()\n    @IsArray()\n    @ValidateNested({ each: true})\n    @Type( ()=> CreatePostMetaOptionsDto )\n    @ApiPropertyOptional({\n        type: 'array',\n        required: false,\n        items: {\n            type: 'object',\n            properties: {\n                key:{ type: 'string',      \n                    description: 'The key can be any string identifier for your meta option', example: 'sidebarEnabled'\n                    },    \n                value:{ type: 'any',      \n                        description: 'The value can be anything you want to save for the key of your meta option', example: 'false'\n                        },    \n                },\n        }\n    })\n    metaOptions?: CreatePostMetaOptionsDto[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreatePostMetaOptionsDto{\n\n    @IsNotEmpty()\n    @IsString()\n    key: string;\n\n    @IsNotEmpty()\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-users.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3, {message: 'not met'})@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-users.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-users.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/, {message: 'Minimum eight characters, at least one uppercase letter, one lowercase letter and one number.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-users.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString, Matches, MaxLength, MinLength } from \"class-validator\"; \n\nexport class CreateUserDto {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(3, {message:'not met'})\n    @MaxLength(96)\n    firstName: string;\n    \n    @IsString()\n    @IsOptional()\n    @MinLength(3)\n    @MaxLength(96)\n    lastName?: string;\n\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    @MinLength(8)\n    @Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/   , {message:'Minimum eight characters, at least one uppercase letter, one lowercase letter and one number.'})\n    password: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with specific id'})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsInt, IsOptional } from \"class-validator\";\n\nexport class GetUsersParamDto{\n\n    @ApiPropertyOptional({\n        description: 'Get user with specific id',\n    })\n    @IsOptional()\n    @IsInt()\n    @Type(()=> Number)\n    id?: number;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID of the post that needs to be patched.'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from \"@nestjs/swagger\";\nimport { CreatePostDto } from \"./create-post.dto\";\nimport { IsInt, IsNotEmpty } from \"class-validator\";\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n\n    @ApiProperty({\n        description:'ID of the post that needs to be patched.',\n    })\n    @IsInt()\n    @IsNotEmpty()\n    id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-users.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType( CreateUserDto )\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PartialType} from \"@nestjs/mapped-types\"\nimport { CreateUserDto } from \"./create-users.dto\"\n\n\nexport class PatchUserDto extends PartialType( CreateUserDto ){}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'creates a new post'})@ApiResponse({status: 201, description: 'You get 201 response if your post is created successfully'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Patch } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n\n    constructor(\n        // Injecting Posts Service\n        private readonly postsService: PostsService,\n    ){}\n\n    // GET http://localhost:3000/posts/userId\n    @Get('/:userId?')\n    public getPosts(@Param('userId') userId:string) {\n        return this.postsService.findAll(userId)\n    }\n\n    @ApiOperation({\n        summary: \"creates a new post\"\n    })\n    @ApiResponse({\n        status: 201,\n        description: \"You get 201 response if your post is created successfully\"\n    })\n    @Post()\n    public createPost(@Body() createPostDto:CreatePostDto){\n            console.log(createPostDto)\n            return 'You sent a POST request to posts endpoint.'\n    }\n\n    @Patch()\n    public updatePost(@Body() patchPostDto: PatchPostDto){\n        console.log(patchPostDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule]\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n\n    constructor(\n        // Injecting Users Service\n        private readonly usersService: UsersService,\n    ){}\n    public findAll(userId: string){\n        \n        // Users Service\n        \n        // Find user\n        const user = this.usersService.findOneById(userId) \n\n        // find all his posts\n        return[\n            {\n                user: user,\n                title: '1 Mo',\n                content: 'content A',\n            },\n            {\n\n                user: user,\n                title: '2 Mo',\n                content: 'content B',\n            },\n        ]\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, limit: number, page: number, myheader: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetches a list of registered users on the app.'})@ApiResponse({status: 200, description: 'Successfully requested query.'})@ApiQuery({name: 'limit', type: 'number', description: 'maximal number of results returned per query.', required: false, example: 10})@ApiQuery({name: 'page', type: 'number', description: 'position of page number you want to be returned.', required: false, example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                myheader\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(PatchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                PatchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Param, Query, Body,\n    Headers,\n    ParseIntPipe,\n    DefaultValuePipe,\n    Patch,\n } from '@nestjs/common';\nimport { OPTIONAL_PROPERTY_DEPS_METADATA } from '@nestjs/common/constants';\nimport { CreateUserDto } from './dtos/create-users.dto';\nimport { isInstance } from 'class-validator';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-users.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiTags, ApiQuery, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n    \n    constructor(\n        //Injecting Users Service\n        private readonly usersService: UsersService,\n    ){}\n\n    @Get('/:id?')\n    // ApiOperation for general info about this endpoint\n    @ApiOperation({\n        summary: \"Fetches a list of registered users on the app.\"\n\n    })\n    @ApiResponse({\n        status: 200,\n        description: 'Successfully requested query.'\n    })\n    @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    description: 'maximal number of results returned per query.',\n    required: false,\n    example: 10\n    })\n\n    @ApiQuery({\n        name: 'page',\n        type: 'number',\n        description: 'position of page number you want to be returned.',\n        required: false,\n        example: 1\n        })\n    \n    public getUsers(\n\n        @Param() getUsersParamDto: GetUsersParamDto, \n        @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n        @Query('page', new DefaultValuePipe(3), ParseIntPipe) page: number,\n        @Headers() myheader:any,\n    ){\n        //console.log(getUsersParamDto)\n        return 'You sent a GET request to users endpoint.'\n    }\n\n    @Post()\n    public createUsers(\n        @Body() createUserDto: CreateUserDto){\n        console.log(createUserDto instanceof CreateUserDto);\n        return 'You sent a POST request to users endpoint.'\n    }\n\n    @Patch()\n    public patchUser(\n        @Body() PatchUserDto:PatchUserDto\n    )  \n    {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from \"@nestjs/common\";\nimport { UsersController } from './users.controller';\nimport { UsersService } from \"./providers/users.service\";\nimport { AuthService } from \"src/auth/providers/auth.service\";\nimport { AuthModule } from \"src/auth/auth.module\";\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(()=> AuthModule)]\n})\nexport class UsersModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef } from '@nestjs/common';\nimport { AuthService } from 'src/auth/providers/auth.service';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\n\n@Injectable()\nexport class UsersService {\n    \n    constructor(\n        // inject auth service\n        @Inject( forwardRef(() => AuthService))\n        private readonly authService: AuthService,\n    ){}\n\n    public findAll(\n     getUsersParamDto: GetUsersParamDto,\n     limit: number,\n     page: number,\n){\n    const isAuth = this.authService.isAuth()\n    console.log(isAuth)\n    return [\n        {\n          firstName: 'John',\n          email: 'john@doe.com',\n        },\n        {\n          firstName: 'AlicE',\n          email: 'alice@doe.com',\n        },\n      ];\n}\n    /*\n    find user by Id\n    */\n    public findOneById(id: string) {\n        return {\n            id: 1234,\n            firstName: 'Alice',\n            email: 'alice@doe.com'\n        }\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-meta-options.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-users.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-users.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/dtos/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 INREVIEW\n                            \n                        \n                        \n                            \n                                Value : inreview\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/dtos/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nDescription\nNest framework TypeScript starter repository.\nSetup env\nExample :$ npm installExample :npm i class-validator@0.14.1\n\nnpm i class-transformer@0.5.1\n\nnpm i mapped-types@2.0.5Compile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
